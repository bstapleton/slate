@use '../variables';
@use '../mixins/box-sizing';

$buttonHeight: variables.$defaultUnit * 5;
$buttonMinWidth: variables.$defaultUnit * 8;

.button {
    @include box-sizing.boxSizing;
    display: inline-flex;
    height: $buttonHeight;
    line-height: $buttonHeight;
    min-width: $buttonMinWidth;
    padding: 0 ($buttonMinWidth - $buttonHeight);
    text-decoration: none;
    text-align: center;
    text-transform: uppercase;
    border-radius: calc(#{$buttonHeight} / 3);
    align-items: center;
    cursor: pointer;

    &:hover,
    &:active,
    &.enabled {
        text-decoration: none;
    }

    &:not(:first-child) {
        &.pull-right {
            margin: (variables.$defaultUnit * 2) 0 (variables.$defaultUnit * 2) (variables.$defaultUnit * 2);
        }
    }

    &:not(:last-child) {
        &:not(.pull-right) {
            margin: (variables.$defaultUnit * 2) (variables.$defaultUnit * 2) (variables.$defaultUnit * 2) 0;
        }
    }
}

.hasIcon {
    padding-left: ($buttonMinWidth - ($buttonHeight * 1.25));
    .button__text {
        padding-left: ($buttonHeight * 0.75) + variables.$defaultUnit;
    }
}

.button__icon {
    position: absolute;
    top: ($buttonMinWidth - ($buttonHeight * 1.45));
}

@each $color, $value in variables.$themeColors {
    .#{$color} {
        position: relative;
        color: var(map-get(variables.$contrastColors, $color));
        background-color: var($value);
        transition: 0.1s ease-in-out;

        &:hover,
        &:active {
            background-color: var(#{$value}-light);
            box-shadow: 0 0 0 calc(#{variables.$defaultUnit} * 0.25) var(--color-bg), 0 0 0 calc(#{variables.$defaultUnit} * 0.5) var(#{$value});
        }

        &:active {
            border-radius: calc(#{$buttonHeight} / 6);
        }

        .button__icon {
            svg {
                fill: var(map-get(variables.$contrastColors, $color));
            }
        }
    }
}

.disabled {
    color: var(--color-contrast-high);
    background-color: var(--color-contrast-low);

    &:hover,
    &:active {
        background-color: var(--color-contrast-low);
        cursor: not-allowed;
        text-decoration: none;
        box-shadow: none;
        border-radius: calc(#{$buttonHeight} / 3);
    }
}
